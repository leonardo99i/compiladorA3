
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DIVIDE EQUALS MINUS NUMBER PLUS TIMES VAR\n    statement : VAR EQUALS expression\n              | expression\n    \n    expression : expression PLUS term\n               | expression MINUS term\n               | expression TIMES term\n               | expression DIVIDE term\n               | term\n    \n    term : NUMBER\n         | VAR\n    '
    
_lr_action_items = {'VAR':([0,6,7,8,9,10,],[2,11,11,11,11,11,]),'NUMBER':([0,6,7,8,9,10,],[5,5,5,5,5,5,]),'$end':([1,2,3,4,5,11,12,13,14,15,16,],[0,-9,-2,-7,-8,-9,-1,-3,-4,-5,-6,]),'EQUALS':([2,],[6,]),'PLUS':([2,3,4,5,11,12,13,14,15,16,],[-9,7,-7,-8,-9,7,-3,-4,-5,-6,]),'MINUS':([2,3,4,5,11,12,13,14,15,16,],[-9,8,-7,-8,-9,8,-3,-4,-5,-6,]),'TIMES':([2,3,4,5,11,12,13,14,15,16,],[-9,9,-7,-8,-9,9,-3,-4,-5,-6,]),'DIVIDE':([2,3,4,5,11,12,13,14,15,16,],[-9,10,-7,-8,-9,10,-3,-4,-5,-6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,6,],[3,12,]),'term':([0,6,7,8,9,10,],[4,4,13,14,15,16,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> VAR EQUALS expression','statement',3,'p_statement','calculadora.py',49),
  ('statement -> expression','statement',1,'p_statement','calculadora.py',50),
  ('expression -> expression PLUS term','expression',3,'p_expression','calculadora.py',64),
  ('expression -> expression MINUS term','expression',3,'p_expression','calculadora.py',65),
  ('expression -> expression TIMES term','expression',3,'p_expression','calculadora.py',66),
  ('expression -> expression DIVIDE term','expression',3,'p_expression','calculadora.py',67),
  ('expression -> term','expression',1,'p_expression','calculadora.py',68),
  ('term -> NUMBER','term',1,'p_term','calculadora.py',91),
  ('term -> VAR','term',1,'p_term','calculadora.py',92),
]
